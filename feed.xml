<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>malformX</title><subtitle>Just a blog that i've been working on :)</subtitle> <updated>2022-03-06T10:07:41+05:30</updated> <author> <name>Johan</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Johan </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Reversing Metasploit Payload Part-1</title><link href="/posts/reverseing-metasploit-payload-part-1/" rel="alternate" type="text/html" title="Reversing Metasploit Payload Part-1" /><published>2022-03-05T23:05:00+05:30</published> <updated>2022-03-06T10:07:12+05:30</updated> <id>/posts/reverseing-metasploit-payload-part-1/</id> <content src="/posts/reverseing-metasploit-payload-part-1/" /> <author> <name>malformX</name> </author> <category term="Reversing" /> <category term="Analogy" /> <category term="metasploit" /> <summary> Intro Hello fellas. This is the first blog that I’ve ever created. This blog is totally about analyzing how metasploit framework’s reverse_tcp shell for windows works. For any newbie reader, metasploit-framework is an amazing tool which can be used to do pen-testing. It also ships with msfvenom which is capable of generating raw shell-codes, platform specific payloads and reverse shells. I’m no... </summary> </entry> </feed>
